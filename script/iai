#!/bin/bash

# NOTE: `set -e` impedes try-catching commands

##
# research absolute paths to this script file and its directory
# - see http://stackoverflow.com/a/246128/1894803
# TODO
# - is this only related to iai root?
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Until iai is loaded, can't use `iai dir`
# TODO seems lighter not sourcing until something is need
source $(dirname "$DIR")/bash/helper.bash

iai () {
  echo "running iai inside function"
}

iai-path () {
  printf "%s" $(dirname $DIR)
  if test $# -gt 0; then
    # Quoting is neccessary to correctly parse arguments
    # Ex: local args=("$@"); for arg in "$@"; do echo >&2 "arg=$arg"; done
    printf "%s" "${@/#//}"
  fi
  printf "\n" # could use echo but wanted to be more explicit
}

case "$1" in
  "")
    echo "123456789012345678901234567890123" # 3*10+3=36 cols
    echo "----------------=----------------"
    echo "----------=-----------=----------"
    echo "--------=-------=-------=--------"
    echo "----=----=---==---==---=----=----"
    echo "ollo 0ll0 oVo  -*-  0v0 o11o 0110"
    echo "ollo 0ll0 oVo  iai  0v0 o11o 0110"
    echo "ollo 0ll0 oVo  -*-  0v0 o11o 0110"
    echo "----=----=---==---==---=----=----"
    echo "--------=-------=-------=--------"
    echo "----------=-----------=----------"
    echo "----------------=----------------"
    echo "-----------------------------lolo"
    exit 0
  ;;
  ##
  # outputs the directory where iai code resides (iai root)
  # - this command is built-in (there is no iai-root script)
  # - It's probably the most basic operation besides the "artistic" bare `iai`
  # TODO
  # - should `dir` be deprecated favouring `root`? Seems more descriptive
  root|dir)  dirname "$DIR"; exit ;;
  id)
    if test -x $2; then
      echo "$(basename "$2" | sed 's/iai-//')"
      exit 0
    fi
    fail "miss exec perms: '$2'"
    exit 1
  ;;
  ##
  # TODO
  # - This should not be a built-in, sure
  db)
    DB="$(iai dir)/db/$(iai id "$2")/$(hostname)"
    mkdir -p "$DB"
    echo "$DB"
  ;;
  path) 
    shift;
    iai-path "$@" # Quoting is neccessary, otherwise quoted args are splitted
  ;;
  date)
    date --rfc-3339=date || exit 1
  ;;
  hora)
    date --rfc-3339=seconds || exit 1
  ;;
  info|warn|fail)
    $1 "${@:2}"
    exit $?
  ;;
  "-h"|"-?"|"--help"|"help")
    echo "##"
    echo "# Here should be some help text"
    echo "##"
    echo "> available external cmds (\$1):"
    tree $DIR
    echo "> built-in commands:"
    echo "> id db dir date hora info warn fail"
  ;;
  *)# run "external" command
    CMD="$DIR/iai-$1"
    [[ ! -f "$CMD" ]] && fail "iai command '$1' does not exist" && exit 1
    # try auto fix when file-is-not-executable
    if [ ! -x "$CMD" ]; then
      warn "It seems likely command exists but has not exec perms:"
      # TODO confirm before automatically making a file executable!!!!!!!! ehmmm why?
      ls -l "$CMD"; echo -n "> Trying automatic 'chmod +x' fix ... "
      chmod +x "$CMD" && info "succeed!" || fail ":( failed ;("
    fi
    $CMD "${@:2}"
  ;;
esac
