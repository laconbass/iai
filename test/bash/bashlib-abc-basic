#!/bin/bash

source "bash/tested.bash" || exit

(
	msg='some msg with error description'
	test--fail () {
		code=$?
		local expect=${1:?"$FUNCNAME: missing expected exit code"}
		shift
		test $code -eq $expect
		tested "'fail' exit code is $expect when ran after '$@' (code was $code)"
		[[ "$out" =~ continues$ ]] && false
		tested "'fail' exits when ran after '$@'"
		[[ "$out" =~ ^*$msg*$ ]] && false
		tested "'fail' stderr ('$out') contains ('$msg') after '$@'"
  }

	#out="$( true; fail $msg; echo continues; 2>&1 )"
	#test--fail 255 "true"
	out="$( false; fail $msg; echo continues; 2>&1 )"
	test--fail 1 "false"
	#out="$( (exit 0); fail $msg; echo continues; 2>&1 )"
	#test--fail 255 "(exit 0)"
	out="$( (exit -1); fail $msg; echo continues; 2>&1 )"
	test--fail 255 "(exit -1)"

	for (( n=1 ; n <= 255 ; n++ ));	do
		out="$( (exit $n); fail $msg; echo continues )"
		test--fail $n "(exit $n)"
	done
)
##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
