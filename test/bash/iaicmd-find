#!/bin/bash

source "$(bashido autotest)" || exit
source "$(bashido assert)" || exit

REPO_DIR=$(git rev-parse --show-toplevel)

test_cmd () {
	local line="$1" cmd="$2" val="$3"
	case "$cmd" in
		--code-is)
			( eval "$line" ) 1>/dev/null
			( assert_code $val )
			tested "running '$line' returns '$val'"
			;;
		--outputs)
			if test "$val" == "nothing"; then
				test "$( eval "$line" )" == ""
				tested "running '$line' outputs nothing"
			else
				diff_test <( eval "$line" ) <<<"$val"
				tested "running '$line' outputs expected data"
			fi
			;;
		*)
			echo "test_cmd: unknown action '$cmd'"
	esac
}

line="iai find --help >/dev/null"
test_cmd "$line" --code-is 0
test_cmd "$line" --outputs nothing

line="iai find"
test_cmd "$line" --code-is 0
#test_cmd "$line" --outputs nothing

line="iai find -samefile ."
test_cmd "$line" --code-is 0
test_cmd "$line" --outputs "$REPO_DIR"

line="iai find -type d -name test"
test_cmd "$line" --code-is 0
test_cmd "$line" --outputs "$REPO_DIR/test"

iai working
echo "WORKING @ $BASH_SOURCE"
false

##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
