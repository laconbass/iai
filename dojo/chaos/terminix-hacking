#!/bin/bash

source $(iai dir)/bin/helper.bash

##                            ~··~
# Terminix hacking reference (o!!o)
# - Quick ref                /\ºº/\
#   - `terminix --help`
#   - `dconf dump /com/gexperts/Terminix/`
#   - gsettings list{,-relocatable}-schemas | grep Terminix
#   - `while read s; do echo "# $s"; gsettings list-keys $s | sort | sed 's/^/ · /'; done < <({ gsettings list-schemas; gsettings list-relocatable-schemas; } | grep Terminix)
# - Links
#   
#   - https://github.com/gnunn1/terminix/wiki/Command-Line-Actions
#   - https://github.com/gnunn1/terminix/wiki/Triggers
#   - https://github.com/gnunn1/terminix/wiki/FAQ
#     - #what-variables-are-supported-in-custom-titles
#        : ${title}	The title of the terminal
#        : ${iconTitle}	The icon title of the terminal
#        : ${id}	The numeric terminal ID (i.e. 1,2,3,4)
#        : ${directory}	The current working directory in the terminal
#        : ${columns}	The number of columns in the terminal
#        : ${rows}	The number of rows in the terminal
#        : ${hostname}	The hostname of the current session, **availability dependent**
#        : ${username}	The current username, **requires trigger support**

##
# Interactively consult gsettings
# -`sed` to add string at line begin: http://unix.stackexchange.com/q/94156/49721
#    gsetting songs list-keys $s | sort | sed 's/^/ · /'
terminix_gconf () {
  while p="$({ gsettings list-schemas; gsettings list-relocatable-schemas; }|grep Terminix)"
  do
    echo "Select a profile to interact with. Quit to cancel operation"
    p=$(option_list "Quit Repeat $p") || fail "Could not complete profile selection";
    test "$p" == "Quit" && return 0;
    test "$n" == "Repeat" && continue
    while k="$(gsettings list-keys $p | sort)"; do
      echo "Select a profile key to interact. Repeat to change profile. Quit to cancel."
      k=$(option_list "Quit Repeat $k") || fail "Could not complete the key selection"
      test "$k" == "Quit" && return 0;
      test "$k" == "Repeat" && continue;
      echo "Selected key '$k' from profile '$p'"
      echo "- description: $(gsettings describe $p $k)"
      echo "- current val: $(gsettings get $p $k)"
      echo "Back to select another key. Restart to select another profile. Quit to exit."
      n=$(option_list "Quit Back Restart")
      test "$n" == "Quit" && return 0 
      test "$n" == "Restart" && break
      test "$n" == "Back" && continue
    done
  done
}
terminix_gconf; echo "WORKING ON"; exit 1

terminix -s IaiWorkingSession -w ~/Proxectos
#terminix -a session-add-right -x "echo 1"
#terminix -a session-add-right -x "echo 2"

echo "TODO iai-resume"
exit 1

cd ~/Proxectos/sesions/automated
files=(
  gizmotractor
  test-log.bash
  test-helper.bash
  ~/Proxectos/iai/bin/helper.bash
)

iai
echo "press any key to resume working session"
echo "this will open for editing the following files:"
for file in ${files[@]}; do echo "- $file"; done
read -n 1

vim "${files[@]}"

