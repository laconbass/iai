assert_function iai

source <(autotest) || exit

##
# `iai test` runs the whole iai test suite
# TODO feature independent tests (i.e `iai test bashido`)
##
iai-test () {
  local root_path="$(iai-root)"
	local project="${root_path##*/}"
	# TODO project dinamic detection (i.e `git rev-parse ...`)

	iai-assert-structure "$root_path" && cd "$root_path" || exit

	source test/check_feature || exit
	assert_function "check_feature"

	(( $# )) || {
		info "testing project '$project' located at $root_path"
	  while read codename; do iai-test "$codename"; done < <(
			find "$root_path/abc" -mindepth 1 -maxdepth 1 -type d -print0\
				| sort -z\
				| xargs -0 -n 1 basename -a
		)
		exit
  }

	info "testing '$project' project's feature '$1'"
	#( check_feature "$1" ) |& less -R; ( exit $PIPESTATUS )
	( check_feature "$1" )
	tested "'$project' project's feature '$1'"
	# TODO maybe tested should rely on $PIPESTATUS allways
}

##
# TODO the following should not belong here
##

##
# structural test checks directory structure by convention
##
iai-assert-structure () {
  local root="${1:?'root path must be provided'}"
	assert_dir_exists "$root"
	assert_ent_exists "$root/README.md"
	assert_dir_exists "$root/test"
	assert_reg_perm_r "$root/test/check_feature"
}
##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
