assert_function iai || exit

function iai-sync () {
	if test "$1" == "repo"
	then
		iai-sync-repo
	else
	  iai-sync-all
	fi
}

function iai-sync-action () {
  node -e "console.log($(iai git-status).action)"
}

function iai-sync-repo () {
	local repo="${1:-$(iai repo)}"
	test -z "$repo" && emsg "can't sync because can't find git repo" && exit 1
  
  cd "$repo" || fail
  repo="~${repo#$HOME}"
  info "fetching %s" "$repo"
  git fetch
  case "$(iai-sync-action)" in
    fetch)
      emsg "check files, no push/pull need"
      node -e "console.log($(iai git-status))"
      exit 1
      ;;
    *) fail "can't determine what to do" ;;
  esac
  utip "> git pull"
  git pull || fail "can't pull"
  utip "> git push"
  git push || fail "can't push"
  if test "$(hostname)" != "shitbook"
  then
    utip "> # remote pull @shitbook through ssh"
    ssh shitbook "cd $repo && git pull" || fail "can't pull on shitbook"
  fi
  utip "> git status # (local) after sync!"
  git status
}

function iai-sync-all () {
  info "Sincronizando todos os repositorios..."
	{
		iai-sync-repo ~/Proxectos/iai
    iai-sync-repo ~/Proxectos/empresa.lorenzogrv.com
	} # |& utip
  info "Sincronizados todos os repositorios."
}

##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
