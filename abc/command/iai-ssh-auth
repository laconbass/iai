assert_function iai || exit

function iai-ssh-auth () {
	which ssh &>/dev/null || fail "ssh not found"

	test -n "$1" || fail "Missing argument 1: %s" "role of current machine"
	case "$1" in
		"client"|"server")
			iai net ping "$2" || return 1
			;;
		*)
		  emsg "role of current machine ($1) must be either 'client' or 'server'"
			utip "Usage: $FUNCNAME client {target_server}"
			utip "   or: $FUNCNAME server {target_client}"
			exit 1
			;;
	esac
	test -n "$2" || fail "Missing argument 2: %s" "hostname of target machine"

	iai-ssh-auth-as-$1 "$2"
}

function iai-ssh-auth-as-client {
	local server="$1"
	if ! test -e ~/.ssh/id_rsa.pub
	then
		warn "current machine does not have a public key"
	  which ssh-keygen &>/dev/null || fail "ssh-keygen not found"
		ssh-keygen || fail "something failed while generating the key"
	  test -e ~/.ssh/id_rsa.pub || fail "expected the key to be at ~/.ssh/id_rsa.pub"
	fi

	local auth_file=".ssh/authorized_keys"

	info "testing if $server uses dropbear instead of openssh..."
	if ssh $server "test -d /etc/dropbear"
	then
		auth_file="/etc/dropbear/authorized_keys"
		warn "server uses dropbear, key will be appended to %s" "$auth_file"
	fi

	info "Sending the id_rsa.pub file to %s..." "$server"
	if ! ssh $server "tee -a $auth_file" <~/.ssh/id_rsa.pub
	then
		emsg "something whent wrong while sending the key"
		utip "Is current machine able to ssh into server?"
		utip "> %s" "ssh $server"
		utip "Take a look at %s," "~/.ssh/ssh_config"
		utip "you may need to specify Username/Port or so."
		utip "If needed, see %s" "man 5 ssh_config"
		return 1
	fi

	verb "Successfully added the key to %s" "$server:$auth_file"
	utip "Now you can 'ssh $server' whithout being asked for authentication"
}

function iai-ssh-auth-as-server {
	local client="$1"

	local idfile=~/.ssh/"$client--id_rsa.pub"
	test -e "$idfile" && warn "will overwrite %s" "$idfile"

	info "Getting the id_rsa.pub file from %s" "$client"
	if ! scp "$client:~/.ssh/id_rsa.pub" "$idfile"
	then
		emsg "something went wrong while retrieving the key"
		utip "Does the remote machine (%s) have an id_rsa.pub file?" "$client"
		utip "> %s" "ssh $client 'test -e ~/.ssh/id_rsa.pub && echo OK || ssh-keygen'"
		utip "IMPORTANT: if remote machine runs dropbear, the command is"
		utip "> %s" "dropbearkey -t rsa -f ~/.ssh/id_dropbear -s 2048"
		utip "After that, public key data will be output"
		utip "see https://techoverflow.net/2015/12/12/fixing-ssh-exited-string-too-long-on-openwrt/"
		return 1
	fi

	verb "Adding the key to '~/.ssh/authorized_keys'"
	cat "$idfile" >> ~/.ssh/authorized_keys || fail "something went wrong"

	info "Successfully added %s's key" "$client"
	utip "Now you can ssh into this system from %s" "$client"
}

##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
