assert_function iai || exit

function iai-net () {
  if test -z "$1"
  then
    echo "Displaying information about how this device connects to the cloud:"
    printf "cloudy: "; iai-net-cloudy && echo YES || echo NO
    printf " wanip: "; iai-net-wanip
    printf "  gate: "; iai-net-gate
    printf " lanip: "; iai-net-lanip
    printf " iface: "; iai-net-iface
    printf "   mac: "; iai-net-mac
    return
  fi

  local cmd="$FUNCNAME-$1"
  assert_function "$cmd"
  shift
  $cmd "$@"
}

function iai-net-ping () {
  test -n "$1" || fail "Missing argument 1: %s" "target machine (hostname or ip)"
  info "checking connectivity to target machine ($1)..."
  if ! ping -q -c 1 -w 1 "$1" &>/dev/null
  then
    emsg "can't reach target machine ($1)"
    return 1
  fi
  info "Connectivity ok"
}

function iai-net-cloudy () {
  # checks wherever it's a route available to the cloud. Outputs nothing
	ip route get 8.8.8.8 &>/dev/null || {
		type ip &>/dev/null && return 1
    emsg "'ip' command is not available."
    utip "Try %s (openwrt based)" "iai pkg install ip"
	}
}

function iai-net-wanip () {
  # provides a way to research the system IP within the cloud.
  # It depends on `dig`. See http://unix.stackexchange.com/a/81699
  ##
  iai-net-cloudy || {
		emsg "There isn't a route to the cloud"
		return 1
	}
  dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null || {
    if ! type dig &>/dev/null; then
      emsg "'dig' command seems not available."
      utip "Try '%s' (debian/etc)" "iai pkg install dnstools"
      utip "or '%s' (arch/etc)" "iai pkg install bind-tools"
      utip "or '%s' (openwrt)" "iai pkg install bind-dig"
      utip "or '%s' (termux)" "iai pkg install dnsutils"
    else
      emsg "dig command failed (unknown error)"
      test "$1" = "-q" && return 1 # silent mode
      dig +short myip.opendns.com @resolver1.opendns.com
    fi
    return 1
  }
}

function iai-net-lanip () {
  # researches the system IP within the LAN.
	# TODO system may have LAN connection when not connected to the cloud
	iai-net-cloudy || {
    emsg "Cloud is unreachable from this device"
    return 1
	}
  ip route get 8.8.8.8 | awk '{print $7;exit}'
}

function iai-net-gate () {
  # researches the gate IP which connects this device to the cloud
  # see https://serverfault.com/a/731095/195906
	iai-net-cloudy || fail "device isn't connected to the cloud"
	ip route get 8.8.8.8 | awk '{print $3;exit}'
}

function iai-net-iface () {
	# researches which network interface connects this device to the cloud
	iai-net-cloudy || fail "device isn't connected to the cloud"
	ip route get 8.8.8.8 | awk '{print $5;exit}'
}

function iai-net-mac () {
	if iface="$(iai-net-iface 2>/dev/null)"
  then
    cat "/sys/class/net/$iface/address"
  else
    emsg "Can't determine which interface connects this device to the cloud"
    return 1
  fi
}

##
# vim modeline
# /* vim: set filetype=sh ts=2 shiftwidth=2: */
